# The Vagrantfile is expected to be run like:
# vagrant up --provider hyperv

$script = <<-'SCRIPT'

# Set these values to make use of the Slack step handler for debugging
export SLACK_HOOK_URL=
export AWS_ACCESS_KEY_ID=
export AWS_SECRET_ACCESS_KEY=
export AWS_DEFAULT_REGION=us-east-1

apt-get install -y unzip wget git
cd /tmp
git clone https://github.com/OctopusDeploy/OctopusGuides.git
chmod 777 -R OctopusGuides
cd OctopusGuides/vm

sudo -Hu vagrant DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus dconf write /org/gnome/shell/favorite-apps "['Passwords.desktop', 'Octopus.desktop', 'Jenkins.desktop', 'Random Quotes Dev.desktop', 'Random Quotes Test.desktop', 'gnome-terminal.desktop']"

./java-jenkins-k8s.sh
SCRIPT

Vagrant.configure("2") do |config|
  config.vm.box = "octopusdeploy/guide-common-base"
  config.vm.network 'public_network', bridge: 'InternalNAT'
  config.vm.synced_folder '.', '/vagrant', disabled: true
    config.vm.provider "hyperv" do |v|
        v.vmname = "Jenkins, Kubernetes and Octopus"
        v.memory = 4096
        v.cpus = 2
    end
    config.vm.provider "virtualbox" do |v|
        v.name = "Jenkins, Kubernetes and Octopus"
        v.memory = 4096
        v.cpus = 2
        v.customize ["modifyvm", :id, "--vram", "128"]
        v.customize ["modifyvm", :id, "--graphicscontroller", "vmsvga"]
    end
  config.vm.provision "shell", inline: $script
end
